{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AYLwYMz4p0p7"
      },
      "outputs": [],
      "source": [
        "import pandas as pd \n",
        "import numpy as np \n",
        "reviews_df = pd.read_csv('Fat Burner.csv')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reviews_df.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "2X4EOWaFqv-b",
        "outputId": "c81c1918-5a85-4f88-8f6e-a9692cd3c015"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Unnamed: 0                                             review  label\n",
              "0           0  I was hopful this would give me a little jump ...      1\n",
              "1           1  I'm a bit of a fitness nut, but I have been st...      1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d616f9e-2d44-46cd-9799-3105da3dcf20\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>review</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>I was hopful this would give me a little jump ...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>I'm a bit of a fitness nut, but I have been st...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d616f9e-2d44-46cd-9799-3105da3dcf20')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9d616f9e-2d44-46cd-9799-3105da3dcf20 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9d616f9e-2d44-46cd-9799-3105da3dcf20');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reviews_df.drop(['Unnamed: 0'], axis = 1, inplace = True)"
      ],
      "metadata": {
        "id": "X41sX6Riq1_d"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import string\n",
        "import nltk\n",
        "import re\n",
        "nltk.download('stopwords')\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "nltk.download('wordnet')\n",
        "nltk.download(\"omw-1.4\")\n",
        "def preprocess(t):\n",
        "    clean_t = [char for char in t if char not in string.punctuation]\n",
        "    clean_t = ''.join(clean_t)\n",
        "    clean_t = [word for word in clean_t.split(' ') if word not in stopwords.words('english')]\n",
        "    lemmitizer = WordNetLemmatizer()\n",
        "    clean_t = [lemmitizer.lemmatize(word) for word in clean_t]\n",
        "    clean_t = ' '.join(clean_t)\n",
        "    pattern = r'[0-9]'\n",
        "    clean_t = re.sub(pattern, '', clean_t)\n",
        "    clean_t = clean_t.lower()\n",
        "    pattern = r'i '\n",
        "    clean_t = re.sub(pattern, '', clean_t)\n",
        "    clean_t = re.sub(r'^\\S+\\s*', '', clean_t)\n",
        "    return clean_t"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7Sq_QjmsrEp_",
        "outputId": "86226349-4ecb-4a9d-d874-d67f7ad77558"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n",
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n",
            "[nltk_data] Downloading package omw-1.4 to /root/nltk_data...\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reviews_df['processed_review_text'] = reviews_df['review'].apply(preprocess)"
      ],
      "metadata": {
        "id": "B2thTIihrsfJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "reviews_df.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "BwhoMwzHGDm2",
        "outputId": "30611e83-7941-41de-fc2c-a525135edab2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                              review  label  \\\n",
              "0  I was hopful this would give me a little jump ...      1   \n",
              "1  I'm a bit of a fitness nut, but I have been st...      1   \n",
              "\n",
              "                               processed_review_text  \n",
              "0  i hopful would give little jump start weight l...  \n",
              "1  im bit fitness nut i struggling appetite since...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b21f3cb6-dcfc-4b97-a74f-75991b613ab6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>review</th>\n",
              "      <th>label</th>\n",
              "      <th>processed_review_text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>I was hopful this would give me a little jump ...</td>\n",
              "      <td>1</td>\n",
              "      <td>i hopful would give little jump start weight l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>I'm a bit of a fitness nut, but I have been st...</td>\n",
              "      <td>1</td>\n",
              "      <td>im bit fitness nut i struggling appetite since...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b21f3cb6-dcfc-4b97-a74f-75991b613ab6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b21f3cb6-dcfc-4b97-a74f-75991b613ab6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b21f3cb6-dcfc-4b97-a74f-75991b613ab6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reviews_df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U4muxLppGCzC",
        "outputId": "c5e587fd-3340-4ca1-f112-ef013b1e3a4f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 492 entries, 0 to 491\n",
            "Data columns (total 3 columns):\n",
            " #   Column                 Non-Null Count  Dtype \n",
            "---  ------                 --------------  ----- \n",
            " 0   review                 492 non-null    object\n",
            " 1   label                  492 non-null    int64 \n",
            " 2   processed_review_text  492 non-null    object\n",
            "dtypes: int64(1), object(2)\n",
            "memory usage: 11.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reviews_df['label'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HKsu491mGMNd",
        "outputId": "ff5f3433-8935-46de-e3f7-2901f643fa5d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1    251\n",
              "0    241\n",
              "Name: label, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X = reviews_df['processed_review_text']\n",
        "y = reviews_df['label']\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)"
      ],
      "metadata": {
        "id": "0CzUW-ZlGWwM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.naive_bayes import MultinomialNB\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.metrics import classification_report, recall_score, precision_score, f1_score, roc_curve, auc, precision_recall_curve, roc_auc_score\n",
        "from matplotlib import pyplot\n",
        "from numpy import argmax"
      ],
      "metadata": {
        "id": "KPyCApxQGp5l"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_names = [\"Logistic Regression\", \"SVM\", \"Decision Tree\", \"Random Forest\", \n",
        "               \"AdaBoost\", \"Neural Net\", \"Naive Bayes\"]\n",
        "classifiers = [LogisticRegression(),\n",
        "               SVC(probability=True),\n",
        "               DecisionTreeClassifier(max_depth=5),\n",
        "               RandomForestClassifier(max_depth=5, n_estimators=10),\n",
        "               AdaBoostClassifier(),\n",
        "               MLPClassifier(alpha=1, max_iter=1000),\n",
        "               MultinomialNB()\n",
        "               ]\n",
        "for model_name, clf in zip(model_names, classifiers):\n",
        "  clf_pipe = Pipeline([\n",
        "                    ('tfidf vec', TfidfVectorizer()),\n",
        "                    (model_name, clf),\n",
        "                    ])               \n",
        "  clf_pipe.fit(X_train,y_train)\n",
        "\n",
        "  y_pred_prob = clf_pipe.predict_proba(X_test)[:, 1]\n",
        "\n",
        "  fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)\n",
        "  precision, recall, thresholds_pr = precision_recall_curve(y_test, y_pred_prob)\n",
        "\n",
        "  F1 = 2 * (precision * recall) / (precision + recall)\n",
        "  f_index = argmax(F1)\n",
        "  optimal_threshold = thresholds_pr[f_index]\n",
        "  y_pred = [1 if prob > optimal_threshold else 0 for prob in y_pred_prob]\n",
        "\n",
        "  print('\\n\\n', model_name, '\\n\\n')\n",
        "  print(classification_report(y_test, y_pred))\n",
        "  print('ROC AUC: ', auc(fpr, tpr))\n",
        "  print('Precision/Recall AUC: ', auc(recall, precision))\n",
        "  print('Optimal threshold :', optimal_threshold)\n",
        "  print('\\n\\n') \n",
        "  from sklearn.metrics import roc_curve\n",
        "  import matplotlib.pyplot as plt\n",
        "  roc_auc = roc_auc_score(y_test, clf_pipe.predict_proba(X_test)[:,1])\n",
        "  plt.figure()\n",
        "  plt.plot(fpr, tpr, label= '%s (area = %0.4s)' % (model_name, roc_auc))\n",
        "  plt.plot([0, 1], [0, 1],'r--')\n",
        "  plt.xlim([0.0, 1.0])\n",
        "  plt.ylim([0.0, 1.05])\n",
        "  plt.xlabel('False Positive Rate')\n",
        "  plt.ylabel('True Positive Rate')\n",
        "  plt.title('Receiver operating characteristic')\n",
        "  plt.legend(loc=\"lower right\")\n",
        "  plt.savefig('Log_ROC')\n",
        "  plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Q3yphVsiGvh5",
        "outputId": "89ff1e6a-55a8-4468-c9cf-effd5f92e089"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " Logistic Regression \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.85      0.95      0.90        79\n",
            "           1       0.93      0.81      0.87        69\n",
            "\n",
            "    accuracy                           0.89       148\n",
            "   macro avg       0.89      0.88      0.88       148\n",
            "weighted avg       0.89      0.89      0.88       148\n",
            "\n",
            "ROC AUC:  0.9385433865345808\n",
            "Precision/Recall AUC:  0.9458643785648853\n",
            "Optimal threshold : 0.5245552887916408\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " SVM \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.84      0.95      0.89        79\n",
            "           1       0.93      0.80      0.86        69\n",
            "\n",
            "    accuracy                           0.88       148\n",
            "   macro avg       0.89      0.87      0.88       148\n",
            "weighted avg       0.88      0.88      0.88       148\n",
            "\n",
            "ROC AUC:  0.9376261236470372\n",
            "Precision/Recall AUC:  0.9423882509816337\n",
            "Optimal threshold : 0.5906918367360734\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " Decision Tree \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.68      0.99      0.81        79\n",
            "           1       0.97      0.48      0.64        69\n",
            "\n",
            "    accuracy                           0.75       148\n",
            "   macro avg       0.83      0.73      0.72       148\n",
            "weighted avg       0.82      0.75      0.73       148\n",
            "\n",
            "ROC AUC:  0.7715098147128967\n",
            "Precision/Recall AUC:  0.8523563219585564\n",
            "Optimal threshold : 0.41232227488151657\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " Random Forest \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.80      0.62      0.70        79\n",
            "           1       0.66      0.83      0.73        69\n",
            "\n",
            "    accuracy                           0.72       148\n",
            "   macro avg       0.73      0.72      0.72       148\n",
            "weighted avg       0.73      0.72      0.71       148\n",
            "\n",
            "ROC AUC:  0.7910475142175748\n",
            "Precision/Recall AUC:  0.7986025951534198\n",
            "Optimal threshold : 0.555633252679004\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " AdaBoost \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.74      0.89      0.80        79\n",
            "           1       0.83      0.64      0.72        69\n",
            "\n",
            "    accuracy                           0.77       148\n",
            "   macro avg       0.78      0.76      0.76       148\n",
            "weighted avg       0.78      0.77      0.77       148\n",
            "\n",
            "ROC AUC:  0.8081086039258852\n",
            "Precision/Recall AUC:  0.7845302298184295\n",
            "Optimal threshold : 0.5212415086914253\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " Neural Net \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.84      0.95      0.89        79\n",
            "           1       0.93      0.80      0.86        69\n",
            "\n",
            "    accuracy                           0.88       148\n",
            "   macro avg       0.89      0.87      0.88       148\n",
            "weighted avg       0.88      0.88      0.88       148\n",
            "\n",
            "ROC AUC:  0.9317556411667585\n",
            "Precision/Recall AUC:  0.939333467460293\n",
            "Optimal threshold : 0.5792781199316921\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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iyd9rkVGRoaYNGmS8Pb2FpaWlsLT01MMGjRIPHr0qOADL2b27duX43dA1ucfGhoqGjdunO0YPz8/YWFhISpUqCBWrFih9+sqhGBfHhEREZmmYlUjRERERKQPJkJERERkspgIERERkcliIkREREQmi4kQERERmSwmQkRERGSymAgRERGRyWIiREQ6IiMj4eDgIHcYr0yhUGDLli157tOrVy906NChQOIhosKNiRBRMdSrVy8oFIpsj+vXr8sdGiIjI7XxmJmZoUyZMujduzf+/fdfg5w/NjYWrVq1AgDcunULCoUC0dHROvvMmzcPkZGRBnm93EyaNEn7PpVKJTw9PTFgwAA8fPhQr/MwaSMyrmK1+jwR/adly5ZYsWKFTlupUqVkikaXnZ0drly5Ao1GgzNnzqB37974559/sHPnztc+d26rhj/P3t7+tV8nP6pXr47du3dDrVbj0qVL6NOnDxITE7Fu3boCeX0iejn2CBEVUyqVCm5ubjoPpVKJOXPmwNfXFzY2NvD09MSgQYPw5MmTXM9z5swZNG3aFLa2trCzs4O/vz9OnDihff7QoUNo1KgRrKys4OnpiWHDhuHp06d5xqZQKODm5gYPDw+0atUKw4YNw+7du/Hs2TNoNBpMmTIFZcqUgUqlgp+fH3bs2KE9Nj09HUOGDIG7uzssLS1Rrlw5RERE6Jw769ZY+fLlAQC1a9eGQqFAkyZNAOj2sixZsgQeHh46K7sDQPv27dGnTx/t9tatW1GnTh1YWlqiQoUKmDx5MjIzM/N8nyVKlICbmxtKly6NoKAgfPDBB9i1a5f2ebVajb59+6J8+fKwsrJClSpVMG/ePO3zkyZNwsqVK7F161Zt79L+/fsBAHfu3EHnzp3h4OAAJycntG/fHrdu3cozHiLKjokQkYkxMzPDN998gwsXLmDlypXYu3cvPvvss1z379atG8qUKYPjx4/j5MmTGD16NMzNzQEAN27cQMuWLdGpUyecPXsW69atw6FDhzBkyBC9YrKysoJGo0FmZibmzZuH2bNn46uvvsLZs2cRHByMdu3a4dq1awCAb775Btu2bcP69etx5coVrFmzBl5eXjme99ixYwCA3bt3IzY2Fps3b862zwcffIAHDx5g37592raHDx9ix44d6NatGwDg4MGD6NmzJ4YPH46LFy/iu+++Q2RkJKZPn57v93jr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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " Naive Bayes \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.86      0.97      0.91        79\n",
            "           1       0.97      0.81      0.88        69\n",
            "\n",
            "    accuracy                           0.90       148\n",
            "   macro avg       0.91      0.89      0.90       148\n",
            "weighted avg       0.91      0.90      0.90       148\n",
            "\n",
            "ROC AUC:  0.9462483947899467\n",
            "Precision/Recall AUC:  0.9527144329367947\n",
            "Optimal threshold : 0.5399740601624897\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "from tensorflow.keras.preprocessing.sequence import pad_sequences\n",
        "from tensorflow.keras.preprocessing.text import Tokenizer"
      ],
      "metadata": {
        "id": "pgJGpag8NoRN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "vocab_size = 5000\n",
        "embedding_dim = 300\n",
        "max_length = 500\n",
        "trunc_type='post'\n",
        "oov_tok = \"<OOV>\"\n",
        "\n",
        "tokenizer = Tokenizer(num_words = vocab_size, oov_token=oov_tok)\n",
        "tokenizer.fit_on_texts(X_train)\n",
        "\n",
        "word_index = tokenizer.word_index\n",
        "sequences = tokenizer.texts_to_sequences(X_train)\n",
        "testing_sequences = tokenizer.texts_to_sequences(X_test)\n",
        "\n",
        "padded = pad_sequences(sequences, maxlen=max_length, truncating=trunc_type)  \n",
        "testing_padded = pad_sequences(testing_sequences, maxlen=max_length) "
      ],
      "metadata": {
        "id": "OODmYBP2NwHY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Embedding(vocab_size, embedding_dim, input_length=max_length),\n",
        "    tf.keras.layers.Flatten(),\n",
        "    tf.keras.layers.Dense(300, activation='relu'),\n",
        "    tf.keras.layers.Dense(300, activation='relu'),\n",
        "    tf.keras.layers.Dense(1, activation='sigmoid')\n",
        "])\n",
        "model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['f1'])\n",
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bjwfk69WRA62",
        "outputId": "32c71985-c9e3-4f2d-ad12-fb4cc1430320"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " embedding (Embedding)       (None, 500, 300)          1500000   \n",
            "                                                                 \n",
            " flatten (Flatten)           (None, 150000)            0         \n",
            "                                                                 \n",
            " dense (Dense)               (None, 300)               45000300  \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 300)               90300     \n",
            "                                                                 \n",
            " dense_2 (Dense)             (None, 1)                 301       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 46,590,901\n",
            "Trainable params: 46,590,901\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(padded, y_train, epochs= 10, validation_data=(testing_padded, y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TILCG7vmRFkd",
        "outputId": "0a25844c-10e5-47e0-f828-dbef56824256"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10\n",
            "11/11 [==============================] - 14s 1s/step - loss: 1.2135e-04 - auc: 1.0000 - val_loss: 0.5566 - val_auc: 0.8969\n",
            "Epoch 2/10\n",
            "11/11 [==============================] - 12s 1s/step - loss: 1.0489e-04 - auc: 1.0000 - val_loss: 0.5621 - val_auc: 0.8929\n",
            "Epoch 3/10\n",
            "11/11 [==============================] - 20s 2s/step - loss: 9.2377e-05 - auc: 1.0000 - val_loss: 0.5670 - val_auc: 0.8939\n",
            "Epoch 4/10\n",
            "11/11 [==============================] - 11s 1s/step - loss: 8.4720e-05 - auc: 1.0000 - val_loss: 0.5731 - val_auc: 0.8942\n",
            "Epoch 5/10\n",
            "11/11 [==============================] - 11s 922ms/step - loss: 7.5857e-05 - auc: 1.0000 - val_loss: 0.5781 - val_auc: 0.8941\n",
            "Epoch 6/10\n",
            "11/11 [==============================] - 12s 1s/step - loss: 6.9023e-05 - auc: 1.0000 - val_loss: 0.5830 - val_auc: 0.8943\n",
            "Epoch 7/10\n",
            "11/11 [==============================] - 12s 1s/step - loss: 6.3746e-05 - auc: 1.0000 - val_loss: 0.5880 - val_auc: 0.8940\n",
            "Epoch 8/10\n",
            "11/11 [==============================] - 13s 1s/step - loss: 5.8182e-05 - auc: 1.0000 - val_loss: 0.5924 - val_auc: 0.8943\n",
            "Epoch 9/10\n",
            "11/11 [==============================] - 12s 1s/step - loss: 5.3354e-05 - auc: 1.0000 - val_loss: 0.5963 - val_auc: 0.8930\n",
            "Epoch 10/10\n",
            "11/11 [==============================] - 12s 1s/step - loss: 4.9639e-05 - auc: 1.0000 - val_loss: 0.6003 - val_auc: 0.8938\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_loss = pd.DataFrame(model.history.history)\n",
        "model_loss.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "sNc4rYbzRRi-",
        "outputId": "98746037-263e-4519-a77d-eda94ef769a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_prob_dl = model.predict(testing_padded)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Tl4MnlybTne4",
        "outputId": "008a363a-7089-43c3-cb86-fb92794dcc35"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5/5 [==============================] - 1s 185ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "precision_dl, recall_dl, thresholds_pr_dl = precision_recall_curve(y_test, y_pred_prob_dl)\n",
        "\n",
        "F1_dl = 2 * (precision_dl * recall_dl) / (precision_dl + recall_dl)\n",
        "f_index_dl = argmax(F1_dl)\n",
        "optimal_threshold_dl = thresholds_pr_dl[f_index_dl]\n",
        "y_pred_dl = [1 if prob > optimal_threshold_dl else 0 for prob in y_pred_prob_dl]"
      ],
      "metadata": {
        "id": "DuXxXzuBTxwn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test,y_pred_dl))\n",
        "print('Optimal threshold:', optimal_threshold_dl)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "08xvSDQPUyCR",
        "outputId": "a81fb907-e953-4618-b1df-6ff0e9aeb83f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.89      0.75      0.81        79\n",
            "           1       0.76      0.90      0.82        69\n",
            "\n",
            "    accuracy                           0.82       148\n",
            "   macro avg       0.83      0.82      0.82       148\n",
            "weighted avg       0.83      0.82      0.82       148\n",
            "\n",
            "Optimal threshold: 0.13487929\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('ROC AUC: ', roc_auc_score(y_test, y_pred_prob_dl))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KpgbwxODU3cs",
        "outputId": "ff5f2ca1-7069-449e-a1dc-a6f5f4d1dc3f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ROC AUC:  0.8963492937075765\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Optimized ANN Model "
      ],
      "metadata": {
        "id": "dQSwWtSpe9JK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "tfidf_vec = TfidfVectorizer()\n",
        "X_train_tfidf = tfidf_vec.fit_transform(X_train)\n",
        "X_test_tfidf = tfidf_vec.transform(X_test)"
      ],
      "metadata": {
        "id": "Fgg94MTMiHAr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ann_model =  MLPClassifier(alpha=1, max_iter=1000)\n",
        "ann_model.fit(X_train_tfidf, y_train)\n",
        "y_pred_prob_ann = ann_model.predict_proba(X_test_tfidf)[:,1]"
      ],
      "metadata": {
        "id": "U0Ts7vgdfr-J"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "precision_ann, recall_ann, thresholds_pr_ann = precision_recall_curve(y_test, y_pred_prob_ann)\n",
        "\n",
        "F1_ann = 2 * (precision_ann * recall_ann) / (precision_ann + recall_ann)\n",
        "f_index_ann = argmax(F1_ann)\n",
        "optimal_threshold_ann = thresholds_pr_ann[f_index_ann]\n",
        "y_pred_ann = [1 if prob > optimal_threshold_ann else 0 for prob in y_pred_prob_ann]"
      ],
      "metadata": {
        "id": "7RsubmUHiar-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test,y_pred_ann))\n",
        "print('Optimal threshold:', optimal_threshold_ann)\n",
        "print('ROC AUC: ', roc_auc_score(y_test, y_pred_prob_ann))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zp-91N9xiypK",
        "outputId": "c5ea36f9-2e1a-4fc1-c771-193bf3b28ef9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.85      0.92      0.88        79\n",
            "           1       0.90      0.81      0.85        69\n",
            "\n",
            "    accuracy                           0.87       148\n",
            "   macro avg       0.88      0.87      0.87       148\n",
            "weighted avg       0.87      0.87      0.87       148\n",
            "\n",
            "Optimal threshold: 0.5313035633324643\n",
            "ROC AUC:  0.931388736011741\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "hidden_layer_sizes = np.arange(10,300,10)\n",
        "activation = ['identity', 'logistic', 'tanh', 'relu']\n",
        "solver = ['sgd', 'adam', 'lbfgs']\n",
        "max_iter = np.arange(10,300,10)\n",
        "\n",
        "params = {'hidden_layer_sizes': hidden_layer_sizes,\n",
        "          'activation' : activation,\n",
        "          'solver': solver,\n",
        "          'alpha': alpha,\n",
        "          'max_iter': max_iter}        "
      ],
      "metadata": {
        "id": "CBypS7ZlkkA2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import RandomizedSearchCV, GridSearchCV\n",
        "grid_ann_model = RandomizedSearchCV(estimator= ann_model, param_distributions = params, n_iter = 60, scoring = 'f1', n_jobs = -1, cv= 5, verbose = 3)\n",
        "grid_ann_model.fit(X_train_tfidf, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 190
        },
        "id": "E6ya_1Zin_2U",
        "outputId": "48423e70-f9a3-4cc4-e89b-9585e0c9b2e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 5 folds for each of 60 candidates, totalling 300 fits\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:686: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (180) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomizedSearchCV(cv=5, estimator=MLPClassifier(alpha=1, max_iter=1000),\n",
              "                   n_iter=60, n_jobs=-1,\n",
              "                   param_distributions={'activation': ['identity', 'logistic',\n",
              "                                                       'tanh', 'relu'],\n",
              "                                        'alpha': [0.001, 0.01, 0.1, 1],\n",
              "                                        'hidden_layer_sizes': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n",
              "       140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260,\n",
              "       270, 280, 290]),\n",
              "                                        'max_iter': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n",
              "       140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260,\n",
              "       270, 280, 290]),\n",
              "                                        'solver': ['sgd', 'adam', 'lbfgs']},\n",
              "                   scoring='f1', verbose=3)"
            ],
            "text/html": [
              "<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=5, estimator=MLPClassifier(alpha=1, max_iter=1000),\n",
              "                   n_iter=60, n_jobs=-1,\n",
              "                   param_distributions={&#x27;activation&#x27;: [&#x27;identity&#x27;, &#x27;logistic&#x27;,\n",
              "                                                       &#x27;tanh&#x27;, &#x27;relu&#x27;],\n",
              "                                        &#x27;alpha&#x27;: [0.001, 0.01, 0.1, 1],\n",
              "                                        &#x27;hidden_layer_sizes&#x27;: array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n",
              "       140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260,\n",
              "       270, 280, 290]),\n",
              "                                        &#x27;max_iter&#x27;: array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n",
              "       140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260,\n",
              "       270, 280, 290]),\n",
              "                                        &#x27;solver&#x27;: [&#x27;sgd&#x27;, &#x27;adam&#x27;, &#x27;lbfgs&#x27;]},\n",
              "                   scoring=&#x27;f1&#x27;, verbose=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(cv=5, estimator=MLPClassifier(alpha=1, max_iter=1000),\n",
              "                   n_iter=60, n_jobs=-1,\n",
              "                   param_distributions={&#x27;activation&#x27;: [&#x27;identity&#x27;, &#x27;logistic&#x27;,\n",
              "                                                       &#x27;tanh&#x27;, &#x27;relu&#x27;],\n",
              "                                        &#x27;alpha&#x27;: [0.001, 0.01, 0.1, 1],\n",
              "                                        &#x27;hidden_layer_sizes&#x27;: array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n",
              "       140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260,\n",
              "       270, 280, 290]),\n",
              "                                        &#x27;max_iter&#x27;: array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n",
              "       140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260,\n",
              "       270, 280, 290]),\n",
              "                                        &#x27;solver&#x27;: [&#x27;sgd&#x27;, &#x27;adam&#x27;, &#x27;lbfgs&#x27;]},\n",
              "                   scoring=&#x27;f1&#x27;, verbose=3)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: MLPClassifier</label><div class=\"sk-toggleable__content\"><pre>MLPClassifier(alpha=1, max_iter=1000)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MLPClassifier</label><div class=\"sk-toggleable__content\"><pre>MLPClassifier(alpha=1, max_iter=1000)</pre></div></div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('Best Parameters:', grid_ann_model.best_params_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TuOUJNprZSFm",
        "outputId": "a0030395-5b4b-410e-d5d1-314825abf509"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Best Parameters: {'solver': 'adam', 'max_iter': 180, 'hidden_layer_sizes': 170, 'alpha': 1, 'activation': 'identity'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "grid_ann_pred_prob = grid_ann_model.predict_proba(X_test_tfidf)[:,1]\n",
        "\n",
        "precision_best, recall_best, thresholds_pr_best = precision_recall_curve(y_test, grid_ann_pred_prob)\n",
        "\n",
        "F1_best = 2 * (precision_best * recall_best) / (precision_best + recall_best)\n",
        "f_index_best = argmax(F1_best)\n",
        "optimal_threshold_best = thresholds_pr_best[f_index_best]\n",
        "y_pred_best = [1 if prob > optimal_threshold_best else 0 for prob in grid_ann_pred_prob]"
      ],
      "metadata": {
        "id": "oEgUPAoVntbu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred_best))\n",
        "print('Optimal Threshold:', optimal_threshold_best)\n",
        "print('ROC AUC: ', roc_auc_score(y_test, grid_ann_pred_prob))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K23_s9P2n6oT",
        "outputId": "b02a25be-8f6a-46aa-cb63-d2cf9e2a8f5f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.84      0.96      0.90        79\n",
            "           1       0.95      0.80      0.87        69\n",
            "\n",
            "    accuracy                           0.89       148\n",
            "   macro avg       0.90      0.88      0.88       148\n",
            "weighted avg       0.89      0.89      0.88       148\n",
            "\n",
            "Optimal Threshold: 0.5896736856384551\n",
            "ROC AUC:  0.9332232617868281\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Transfer learning "
      ],
      "metadata": {
        "id": "rsUWBhEBlqNq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids = pd.read_excel('amino_acids_powder_reviews-jh.xlsx')"
      ],
      "metadata": {
        "id": "rmqHPQXHhGQz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "XPZyPBHMmtXN",
        "outputId": "14a972d0-7656-4f87-96e6-9eccbe8d4c6a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         review_date           handle  rating helpfulness_rating  label  \\\n",
              "0      April 5, 2023     Chris Moalli     1.0                NaN    1.0   \n",
              "1     March 29, 2023           Josh B     1.0                NaN    1.0   \n",
              "2      April 3, 2023  Amazon Customer     1.0                NaN    1.0   \n",
              "3     March 19, 2023  Amazon Customer     1.0                NaN    1.0   \n",
              "4  February 28, 2023            bruna     1.0                NaN    1.0   \n",
              "\n",
              "                                              review  \n",
              "0  \"Unflavored\" is a lie. Do not buy this product...  \n",
              "1  I thought getting unflavored would be the way ...  \n",
              "2  I liked what I read in the label. And for the ...  \n",
              "3  The most annoying part is their serving sizes ...  \n",
              "4  I buy a few supplements from this brand and us...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ae3b0b25-d6c5-40e2-8f14-b3222cd8a84a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>review_date</th>\n",
              "      <th>handle</th>\n",
              "      <th>rating</th>\n",
              "      <th>helpfulness_rating</th>\n",
              "      <th>label</th>\n",
              "      <th>review</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>April 5, 2023</td>\n",
              "      <td>Chris Moalli</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>\"Unflavored\" is a lie. Do not buy this product...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>March 29, 2023</td>\n",
              "      <td>Josh B</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>I thought getting unflavored would be the way ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>April 3, 2023</td>\n",
              "      <td>Amazon Customer</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>I liked what I read in the label. And for the ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>March 19, 2023</td>\n",
              "      <td>Amazon Customer</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>The most annoying part is their serving sizes ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>February 28, 2023</td>\n",
              "      <td>bruna</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>I buy a few supplements from this brand and us...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae3b0b25-d6c5-40e2-8f14-b3222cd8a84a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ae3b0b25-d6c5-40e2-8f14-b3222cd8a84a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ae3b0b25-d6c5-40e2-8f14-b3222cd8a84a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids.drop(['review_date', 'handle','rating','helpfulness_rating'], axis = 1, inplace = True)"
      ],
      "metadata": {
        "id": "L1GmcrsBmxwN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KF3Fi-_Bm4kZ",
        "outputId": "5428a097-e812-4ea6-ef89-4457c6d1856b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 512 entries, 0 to 511\n",
            "Data columns (total 2 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   label   511 non-null    float64\n",
            " 1   review  512 non-null    object \n",
            "dtypes: float64(1), object(1)\n",
            "memory usage: 8.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids.dropna(axis = 0, inplace = True)"
      ],
      "metadata": {
        "id": "ZmwLpuFym9SW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ercUhTmknNdh",
        "outputId": "af76b467-4620-46e9-a30b-4de582563b5d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 511 entries, 0 to 511\n",
            "Data columns (total 2 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   label   511 non-null    float64\n",
            " 1   review  511 non-null    object \n",
            "dtypes: float64(1), object(1)\n",
            "memory usage: 12.0+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids['label'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RuyoGEjwjdXH",
        "outputId": "1f50ed73-14af-4ece-eff0-9b082ff5d269"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0    335\n",
              "1.0    176\n",
              "Name: label, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 127
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "amino_acids['processed_review_text'] = amino_acids['review'].apply(preprocess)"
      ],
      "metadata": {
        "id": "036ifH_ZnPD-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_aa = amino_acids['label'].astype(int)\n",
        "X_aa = amino_acids['processed_review_text']"
      ],
      "metadata": {
        "id": "5HvHc5Ypnk3o"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_names = [\"Logistic Regression\", \"SVM\", \"Decision Tree\", \"Random Forest\", \n",
        "               \"AdaBoost\", \"Neural Net\", \"Naive Bayes\"]\n",
        "classifiers = [LogisticRegression(),\n",
        "               SVC(probability=True),\n",
        "               DecisionTreeClassifier(max_depth=5),\n",
        "               RandomForestClassifier(max_depth=5, n_estimators=10),\n",
        "               AdaBoostClassifier(),\n",
        "               MLPClassifier(alpha=1, max_iter=1000),\n",
        "               MultinomialNB()\n",
        "               ]\n",
        "for model_name, clf in zip(model_names, classifiers):\n",
        "  clf_pipe = Pipeline([\n",
        "                    ('tfidf vec', TfidfVectorizer()),\n",
        "                    (model_name, clf),\n",
        "                    ])               \n",
        "  clf_pipe.fit(X_train,y_train)\n",
        "\n",
        "  y_pred_prob = clf_pipe.predict_proba(X_aa)[:, 1]\n",
        "\n",
        "  fpr, tpr, thresholds = roc_curve(y_aa, y_pred_prob)\n",
        "  precision, recall, thresholds_pr = precision_recall_curve(y_aa, y_pred_prob)\n",
        "\n",
        "  F1 = 2 * (precision * recall) / (precision + recall)\n",
        "  f_index = argmax(F1)\n",
        "  optimal_threshold = thresholds_pr[f_index]\n",
        "  y_pred = [1 if prob > optimal_threshold else 0 for prob in y_pred_prob]\n",
        "\n",
        "  print('\\n\\n', model_name, '\\n\\n')\n",
        "  print(classification_report(y_aa, y_pred))\n",
        "  print('ROC AUC: ', auc(fpr, tpr))\n",
        "  print('Precision/Recall AUC: ', auc(recall, precision))\n",
        "  print('Optimal threshold :', optimal_threshold)\n",
        "  print('\\n\\n') "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "48xz2a9Jt8uc",
        "outputId": "c69ab72e-736f-49ee-b811-06a3300dd2d5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            " Logistic Regression \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.85      0.41      0.56       335\n",
            "           1       0.44      0.86      0.58       176\n",
            "\n",
            "    accuracy                           0.57       511\n",
            "   macro avg       0.64      0.64      0.57       511\n",
            "weighted avg       0.71      0.57      0.57       511\n",
            "\n",
            "ROC AUC:  0.716248303934871\n",
            "Precision/Recall AUC:  0.5648032498771675\n",
            "Optimal threshold : 0.47927009552691524\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            " SVM \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.85      0.46      0.60       335\n",
            "           1       0.45      0.85      0.59       176\n",
            "\n",
            "    accuracy                           0.59       511\n",
            "   macro avg       0.65      0.65      0.59       511\n",
            "weighted avg       0.71      0.59      0.60       511\n",
            "\n",
            "ROC AUC:  0.7235329036635006\n",
            "Precision/Recall AUC:  0.5682095136912737\n",
            "Optimal threshold : 0.39905546034021805\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            " Decision Tree \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.69      0.97      0.81       335\n",
            "           1       0.76      0.16      0.26       176\n",
            "\n",
            "    accuracy                           0.69       511\n",
            "   macro avg       0.72      0.57      0.53       511\n",
            "weighted avg       0.71      0.69      0.62       511\n",
            "\n",
            "ROC AUC:  0.5978883989145183\n",
            "Precision/Recall AUC:  0.5825322126291913\n",
            "Optimal threshold : 0.41232227488151657\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            " Random Forest \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.83      0.20      0.32       335\n",
            "           1       0.38      0.92      0.53       176\n",
            "\n",
            "    accuracy                           0.45       511\n",
            "   macro avg       0.60      0.56      0.43       511\n",
            "weighted avg       0.67      0.45      0.40       511\n",
            "\n",
            "ROC AUC:  0.6162483039348711\n",
            "Precision/Recall AUC:  0.46116429189053315\n",
            "Optimal threshold : 0.3715572080748121\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            " AdaBoost \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.76      0.76      0.76       335\n",
            "           1       0.55      0.55      0.55       176\n",
            "\n",
            "    accuracy                           0.69       511\n",
            "   macro avg       0.65      0.65      0.65       511\n",
            "weighted avg       0.69      0.69      0.69       511\n",
            "\n",
            "ROC AUC:  0.6625424016282224\n",
            "Precision/Recall AUC:  0.511410821401914\n",
            "Optimal threshold : 0.49440675501769243\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            " Neural Net \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.66      1.00      0.79       335\n",
            "           1       0.00      0.00      0.00       176\n",
            "\n",
            "    accuracy                           0.66       511\n",
            "   macro avg       0.33      0.50      0.40       511\n",
            "weighted avg       0.43      0.66      0.52       511\n",
            "\n",
            "ROC AUC:  0.7178256445047488\n",
            "Precision/Recall AUC:  0.5576330637442358\n",
            "Optimal threshold : 0.9608188605517637\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            " Naive Bayes \n",
            "\n",
            "\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.82      0.62      0.71       335\n",
            "           1       0.51      0.74      0.60       176\n",
            "\n",
            "    accuracy                           0.66       511\n",
            "   macro avg       0.66      0.68      0.65       511\n",
            "weighted avg       0.71      0.66      0.67       511\n",
            "\n",
            "ROC AUC:  0.7314620081411126\n",
            "Precision/Recall AUC:  0.6011932266841661\n",
            "Optimal threshold : 0.5294879707951127\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-185-769a38599102>:23: RuntimeWarning: invalid value encountered in true_divide\n",
            "  F1 = 2 * (precision * recall) / (precision + recall)\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n"
          ]
        }
      ]
    }
  ]
}